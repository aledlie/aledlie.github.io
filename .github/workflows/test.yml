name: Test Suite

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
        
    - name: Install Node.js dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Build Jekyll site
      run: bundle exec jekyll build
      
    - name: Run unit tests
      run: npm run test -- --ci --coverage --maxWorkers=2
      
    - name: Run E2E tests
      run: npm run test:e2e
      env:
        CI: true
        
    - name: Run performance tests
      run: npm run test:performance
      env:
        BASE_URL: http://localhost:4000
        CI: true
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: |
          test-results/
          tests/performance/results/
          playwright-report/
          coverage/
        retention-days: 30
        
    - name: Upload coverage to Codecov
      if: matrix.node-version == '20'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
  lighthouse-ci:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build Jekyll site
      run: bundle exec jekyll build
      
    - name: Start Jekyll server
      run: bundle exec jekyll serve --detach
      
    - name: Wait for server
      run: npx wait-on http://localhost:4000
      
    - name: Run Lighthouse CI
      run: |
        npm install -g @lhci/cli@0.12.x
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Run security audit
      run: npm audit --audit-level high
      
    - name: Check for vulnerable dependencies
      run: |
        npm install -g audit-ci
        audit-ci --config audit-ci.json
        
  accessibility:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright
      run: npx playwright install --with-deps chromium
      
    - name: Build and serve site
      run: |
        bundle exec jekyll build
        bundle exec jekyll serve --detach
        npx wait-on http://localhost:4000
        
    - name: Run accessibility tests
      run: |
        npx playwright test tests/e2e/accessibility.spec.js
      env:
        BASE_URL: http://localhost:4000